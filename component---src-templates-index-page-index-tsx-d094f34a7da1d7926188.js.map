{"version":3,"sources":["webpack:///./src/components/Portrait/index.tsx","webpack:///./src/templates/IndexPage/styles.ts","webpack:///./src/templates/IndexPage/index.tsx"],"names":["Component","props","file","useStaticQuery","fluid","childImageSharp","portrait","width","float","margin","borderRadius","boxShadow","portraitDark","greetings","wordSpacing","fontSize","color","title","githubLink","textDecoration","clearFloat","clear","featuredPostHeader","featuredPost","featuredPostImage","height","recentPostsHeader","textAlign","recentPostsContainer","flexFlow","justifyContent","alignItems","alignContent","flex","recentPost","flexBasis","maxWidth","marginBottom","recentPostImage","recentPostInfo","pageQuery","Template","data","pageContext","useSiteMetadata","colorMode","useColorMode","Layout","SEO","Portrait","sx","Styles","variant","href"],"mappings":"gRAiCeA,EApBuD,SAACC,GAAU,IACxEC,EAASC,yBAAc,cAAvBD,KAYR,OACC,wBAASD,EACR,kBAAC,IAAD,CAAOG,MAAOF,EAAKG,gBAAgBD,UCzBhCE,EAAwB,CAC7BC,MAAO,CAAC,OAAQ,OAAQ,QACxBC,MAAO,CAAC,OAAQ,QAAS,SACzBC,OAAQ,CAAC,gBAAiB,cAAe,aACzCC,aAAc,MACdC,UAAW,QAqEG,GACdL,WACAM,aApEiC,OAAH,UAC3BN,EAD2B,CAE9BK,UAAW,0BAmEXE,UAhE8B,CAC9BJ,OAAQ,gBACRK,YAAa,QACbC,SAAU,EACVC,MAAO,WA6DPC,MA1D0B,CAC1BR,OAAQ,GA0DRS,WAvD+B,CAC/BF,MAAO,OACPG,eAAgB,QAsDhBC,WAnD+B,CAC/BC,MAAO,QAmDPC,mBAhDuC,CACvCb,OAAQ,iBAgDRc,aA7CiC,GA8CjCC,kBA1CsC,CACtCjB,MAAO,CAAC,QAAS,OAAQ,QACzBkB,OAAQ,CAAC,OAAQ,OAAQ,SAyCzBC,kBAtCsC,CACtCjB,OAAQ,kBACRkB,UAAW,UAqCXC,qBAlCyC,CACzCC,SAAU,WACVC,eAAgB,eAChBC,WAAY,aACZC,aAAc,UACdC,KAAM,YA8BNC,WA3B+B,CAC/BC,UAAW,CAAC,MAAO,MAAO,OAC1BC,SAAU,CAAC,MAAO,MAAO,OACzBrB,SAAU,QACVsB,aAAc,OAwBdC,gBArBoC,CACpCb,OAAQ,CAAC,OAAQ,SAqBjBc,eAlBmC,CACnCd,OAAQ,CAAC,QAAS,SC+ENe,GAFEC,UA3DgD,SAAC,GAA0B,EAAxBC,KAAwB,EAAlBC,YAAkB,IACjF1B,EAAU2B,cAAV3B,MACD4B,EAAaC,cAFqE,GAQzF,OACC,YAACC,EAAA,EAAD,KACC,YAACC,EAAA,EAAD,CAAK/B,MAAM,SACX,wBACC,YAACgC,EAAD,CAAUC,GAAkB,SAAdL,EAAuBM,EAAOvC,aAAeuC,EAAO7C,WAClE,iBAAG4C,GAAIC,EAAOtC,WAAd,sBACA,kBAAIqC,GAAIC,EAAOlC,OAAQA,EAAvB,KACA,iMAKA,mKAIA,+BACQ,YAAC,IAAD,CAAMmC,QAAQ,UAAUC,KAAK,kCAA7B,WADR,mDAIA,mBAAKH,GAAIC,EAAO/B,gBAiCK","file":"component---src-templates-index-page-index-tsx-d094f34a7da1d7926188.js","sourcesContent":["/* 3rd party imports */\nimport React, { FunctionComponent, ComponentPropsWithoutRef } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image, { FluidObject } from 'gatsby-image';\n\ninterface Query {\n\tfile: {\n\t\tchildImageSharp: {\n\t\t\tfluid: FluidObject;\n\t\t}\n\t}\n}\n\nconst Component: FunctionComponent<ComponentPropsWithoutRef<'div'>> = (props) => {\n\tconst { file } = useStaticQuery<Query>(graphql`\n\t\tquery PortraitPhoto {\n\t\t\tfile(relativePath: { eq: \"portrait.png\" }) {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tfluid(maxWidth: 512) {\n\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`)\n\n\treturn (\n\t\t<div {...props}>\n\t\t\t<Image fluid={file.childImageSharp.fluid}/>\n\t\t</div>\n\t);\n}\n\nexport default Component;\n","/* 3rd party imports */\nimport { SxStyleProp } from 'theme-ui';\n\nconst portrait: SxStyleProp = {\n\twidth: ['14em', '17em', '20em'],\n\tfloat: ['none', 'right', 'right'],\n\tmargin: ['0 auto 0 auto', '0 0 0 1.5em', '0 0 0 2em'],\n\tborderRadius: '50%',\n\tboxShadow: 'none',\n}\n\nconst portraitDark: SxStyleProp = {\n\t...portrait,\n\tboxShadow: '0 0 15px -5px #9696F3',\n}\n\nconst greetings: SxStyleProp = {\n\tmargin: '1em 0 0.3em 0',\n\twordSpacing: '0.3em',\n\tfontSize: 2,\n\tcolor: 'primary',\n}\n\nconst title: SxStyleProp = {\n\tmargin: 0,\n}\n\nconst githubLink: SxStyleProp = {\n\tcolor: 'link',\n\ttextDecoration: 'none',\n}\n\nconst clearFloat: SxStyleProp = {\n\tclear: 'both',\n}\n\nconst featuredPostHeader: SxStyleProp = {\n\tmargin: '4em 0 0.5em 0',\n}\n\nconst featuredPost: SxStyleProp = {\n\t\n}\n\nconst featuredPostImage: SxStyleProp = {\n\twidth: ['unset', '30em', '42em'],\n\theight: ['14em', '19em', '24em'],\n}\n\nconst recentPostsHeader: SxStyleProp = {\n\tmargin: '2.5em 0 0.5em 0',\n\ttextAlign: 'center',\n}\n\nconst recentPostsContainer: SxStyleProp = {\n\tflexFlow: 'row wrap',\n\tjustifyContent: 'space-evenly',\n\talignItems: 'flex-start',\n\talignContent: 'stretch',\n\tflex: '0 1 auto',\n}\n\nconst recentPost: SxStyleProp = {\n\tflexBasis: ['75%', '40%', '30%'],\n\tmaxWidth: ['75%', '40%', '30%'],\n\tfontSize: '0.8em',\n\tmarginBottom: '2em',\n}\n\nconst recentPostImage: SxStyleProp = {\n\theight: ['12em', '15em'],\n}\n\nconst recentPostInfo: SxStyleProp = {\n\theight: ['unset', '5em'],\n}\n\nexport default {\n\tportrait,\n\tportraitDark,\n\tgreetings,\n\ttitle,\n\tgithubLink,\n\tclearFloat,\n\tfeaturedPostHeader,\n\tfeaturedPost,\n\tfeaturedPostImage,\n\trecentPostsHeader,\n\trecentPostsContainer,\n\trecentPost,\n\trecentPostImage,\n\trecentPostInfo,\n};","/** @jsx jsx */\n/* 3rd party imports */\nimport { FunctionComponent } from 'react';\nimport { jsx, useColorMode, Link } from 'theme-ui'; // Missing 'Flex' for Posts\nimport { graphql, PageProps } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\n\n/* 1st party imports */\nimport useSiteMetadata from '@/hooks/useSiteMetadata';\nimport Layout from '@/components/Layout';\nimport SEO from '@/components/SEO';\nimport Portrait from '@/components/Portrait';\n// import FeaturedCard from '@/components/FeaturedCard';\n// import PostCard from '@/components/PostCard';\nimport Styles from '@/templates/IndexPage/styles';\n\n// TODO: turn main content into a component, make Portrait like FeaturedImage\n\ninterface Query {\n\tfeaturedImage: {\n\t\tchildImageSharp: {\n\t\t\tfluid: FluidObject;\n\t\t}\n\t}\n\tgenericImage: {\n\t\tchildImageSharp: {\n\t\t\tfluid: FluidObject;\n\t\t}\n\t}\n\trecentPosts: {\n\t\tedges: {\n\t\t\tnode: {\n\t\t\t\tfrontmatter: {\n\t\t\t\t\tslug: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t\tdate: string;\n\t\t\t\t\tfeaturedImage: string | undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}[]\n\t}\n\trecentPostsImages: {\n\t\tedges: {\n\t\t\tnode: {\n\t\t\t\trelativePath: string;\n\t\t\t\tchildImageSharp: {\n\t\t\t\t\tfluid: FluidObject;\n\t\t\t\t}\n\t\t\t}\n\t\t}[]\n\t}\n}\n\ninterface Context {\n\ttitle: string;\n\tslug: string;\n\tdate: string;\n\tfeaturedImage: string;\n\texcerpt: string;\n}\n\n// interface RecentPost {\n// \tslug: string;\n// \ttitle: string;\n// \tdate: string;\n// \tchildImageSharp: {\n// \t\tfluid: FluidObject;\n// \t} | undefined;\n// }\n\n// TODO: Check below works when posts don't define featuredImage\n\n// const transformRecentPosts = (\n// \trecentPosts: Query['recentPosts'],\n// \trecentPostsImages: Query['recentPostsImages'],\n// ): RecentPost[] => {\n// \treturn recentPosts.edges.reduce<RecentPost[]>((acc, postEdge) => {\n// \t\tconst { slug, title, date, featuredImage = undefined } = postEdge.node.frontmatter;\n// \t\tconst postImage = recentPostsImages.edges.find(imageEdge => {\n// \t\t\treturn imageEdge.node.relativePath === featuredImage;\n// \t\t});\n// \t\tconst recentPost: RecentPost = {\n// \t\t\tslug,\n// \t\t\ttitle,\n// \t\t\tdate,\n// \t\t\tchildImageSharp: postImage?.node?.childImageSharp,\n// \t\t};\n// \t\tacc.push(recentPost);\n// \t\treturn acc;\n// \t}, []);\n// };\n\nconst Template: FunctionComponent<PageProps<Query, Context>> = ({ data, pageContext }) => {\n\tconst { title } = useSiteMetadata();\n\tconst [colorMode] = useColorMode<'default' | 'dark'>();\n\t// const recentPosts = transformRecentPosts(\n\t// \tdata.recentPosts,\n\t// \tdata.recentPostsImages,\n\t// );\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title=\"Home\"/>\n\t\t\t<main>\n\t\t\t\t<Portrait sx={colorMode === 'dark' ? Styles.portraitDark : Styles.portrait}/>\n\t\t\t\t<p sx={Styles.greetings}>Hello, Hallo, Hola</p>\n\t\t\t\t<h1 sx={Styles.title}>{title}.</h1>\n\t\t\t\t<p>\n\t\t\t\t\tStudent and developer, studying Computer Science at University\n\t\t\t\t\tof Nottingham (2020 - 2024). Tinker a bit with electronics, programming,\n\t\t\t\t\tgraphic design, and photography.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tFullstack web developer, primarily with GraphQL, SQL, and React. Contributed to projects\n\t\t\t\t\tincluding Gatsby and WPGraphQL for Gravity Forms.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tSee my <Link variant=\"regular\" href=\"https://github.com/etylermoss/\"> Github</Link> for a look at what I've made\n\t\t\t\t\t/ contributed to.\n\t\t\t\t</p>\n\t\t\t\t<div sx={Styles.clearFloat}/>\n\t\t\t\t{/* <h2 sx={Styles.featuredPostHeader}>Featured Post</h2> */}\n\t\t\t\t{/* <FeaturedCard\n\t\t\t\t\tfluid={data.featuredImage\n\t\t\t\t\t\t? data.featuredImage.childImageSharp.fluid\n\t\t\t\t\t\t: data.genericImage.childImageSharp.fluid\n\t\t\t\t\t}\n\t\t\t\t\tpathPrefix=\"/posts/\"\n\t\t\t\t\tinfo={{...pageContext, date: new Date(pageContext.date)}}\n\t\t\t\t\tsx={Styles.featuredPost}\n\t\t\t\t\tforceDarkColorMode={true}\n\t\t\t\t\timageSx={Styles.featuredPostImage}\n\t\t\t\t/>\n\t\t\t\t<h2 sx={Styles.recentPostsHeader}>Recent Posts</h2>\n\t\t\t\t<Flex sx={Styles.recentPostsContainer}>\n\t\t\t\t\t{recentPosts.map(post => (\n\t\t\t\t\t\t<PostCard\n\t\t\t\t\t\t\tfluid={post.childImageSharp?.fluid ?? data.genericImage.childImageSharp.fluid}\n\t\t\t\t\t\t\tpathPrefix=\"/posts/\"\n\t\t\t\t\t\t\tinfo={{title: post.title, slug: post.slug, date: new Date(post.date)}}\n\t\t\t\t\t\t\tsx={Styles.recentPost}\n\t\t\t\t\t\t\timageSx={Styles.recentPostImage}\n\t\t\t\t\t\t\tinfoSx={Styles.recentPostInfo}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Flex> */}\n\t\t\t</main>\n\t\t</Layout>\n\t);\n};\n\nexport default Template;\n\nexport const pageQuery = graphql`\n\tquery($featuredImage: String, $recentPostsFeaturedImages: [String]!) {\n\t\tfeaturedImage: file(relativePath: { eq: $featuredImage } ) {\n\t\t\tchildImageSharp {\n\t\t\t\tfluid {\n\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tgenericImage: file(relativePath: { eq: \"generic-coding.jpg\" } ) {\n\t\t\tchildImageSharp {\n\t\t\t\tfluid {\n\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trecentPosts: allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] } limit: 6 ) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tslug\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate\n\t\t\t\t\t\tfeaturedImage\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trecentPostsImages: allFile(filter: { relativePath: { in: $recentPostsFeaturedImages } } ) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\trelativePath\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfluid {\n\t\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;"],"sourceRoot":""}