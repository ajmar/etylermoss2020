{"version":3,"sources":["webpack:///./src/components/PostCard/styles.ts","webpack:///./src/components/PostCard/index.tsx","webpack:///./src/templates/PostsPage/styles.ts","webpack:///./src/templates/PostsPage/index.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["container","boxShadow","theme","colors","shadow","backgroundColor","image","overflow","infoContainer","display","textDecoration","padding","color","width","title","margin","date","Component","info","pathPrefix","fluid","imageSx","forceDarkColorMode","infoSx","intrinsic","sx","Styles","to","slug","dateTime","toISOString","toLocaleDateString","post","flexBasis","maxWidth","fontSize","marginBottom","postImage","height","postInfo","postListQuery","Template","recentPosts","recentPostsImages","data","pageContext","posts","featuredImages","edges","reduce","acc","postEdge","node","frontmatter","featuredImage","undefined","find","imageEdge","relativePath","recentPost","excerpt","childImageSharp","push","currentPage","numPages","isFirst","isLast","prevPage","nextPage","Layout","SEO","map","dateString","Date","PostCard","key","genericImage","flexWrap","justifyContent","alignItems","listStyle","marginTop","rel","Array","from","length","_","index","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf"],"mappings":"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","file":"component---src-templates-posts-page-index-tsx-4b86fc942302a5dc32ee.js","sourcesContent":["/* 3rd party imports */\nimport { SxStyleProp } from 'theme-ui';\n\nconst container: SxStyleProp = {\n\tboxShadow: theme => `0 0 3px 0px ${theme.colors.shadow}`,\n\tbackgroundColor: 'background',\n};\n\nconst image: SxStyleProp = {\n\toverflow: 'hidden',\n};\n\nconst infoContainer: SxStyleProp = {\n\tdisplay: 'inline-block',\n\ttextDecoration: 'none',\n\tpadding: ['0.3em', '0.45em'],\n\tcolor: 'cardText',\n\tbackgroundColor: 'card',\n\twidth: '100%',\n};\n\nconst title: SxStyleProp = {\n\tmargin: 0,\n};\n\nconst date: SxStyleProp = {\n\tmargin: '0 0 0 auto',\n};\n\nexport default { container, image, infoContainer, title, date };","/** @jsx jsx */\n/* 3rd party imports */\nimport { FunctionComponent } from 'react';\nimport { jsx, SxStyleProp } from 'theme-ui';\nimport { Link } from 'gatsby';\nimport Image, { FluidObject } from 'gatsby-image';\n\n/* 1st party imports */\nimport Styles from '@/components/PostCard/styles';\n\ninterface Props {\n\tinfo: {\n\t\tslug: string;\n\t\ttitle: string;\n\t\tdate: Date;\n\t\texcerpt?: string;\n\t}\n\tpathPrefix: string;\n\tfluid: FluidObject;\n\tforceDarkColorMode?: boolean;\n\timageSx?: SxStyleProp;\n\tinfoSx?: SxStyleProp;\n}\n\nconst Component: FunctionComponent<Props> = ({ info, pathPrefix, fluid, forceDarkColorMode = false, imageSx, infoSx, ...intrinsic }) => (\n\t<div sx={{...Styles.container}} {...intrinsic}>\n\t\t<Link to={`${pathPrefix}${info.slug}`}>\n\t\t\t<Image fluid={fluid} sx={{...Styles.image, ...imageSx}}/>\n\t\t\t<div sx={{...Styles.infoContainer, ...infoSx}}>\n\t\t\t\t<h3 sx={Styles.title}>{info.title}</h3>\n\t\t\t\t<time sx={Styles.date} dateTime={info.date.toISOString()}>{info.date.toLocaleDateString()}</time>\n\t\t\t</div>\n\t\t\t{/* {info?.excerpt && (\n\t\t\t\t<p>{info.excerpt}</p>\n\t\t\t)} */}\n\t\t</Link>\n\t</div>\n);\n\nexport default Component;","/* 3rd party imports */\nimport { SxStyleProp } from 'theme-ui';\n\nconst title: SxStyleProp = {\n\tcolor: 'primary',\n}\n\nconst post: SxStyleProp = {\n\tflexBasis: ['75%', '40%', '30%'],\n\tmaxWidth: ['75%', '40%', '30%'],\n\tfontSize: '0.8em',\n\tmarginBottom: '2em',\n}\n\nconst postImage: SxStyleProp = {\n\theight: ['12em', '15em'],\n}\n\nconst postInfo: SxStyleProp = {\n\theight: ['unset', '5em'],\n}\n\nexport default {\n\ttitle,\n\tpost,\n\tpostImage,\n\tpostInfo,\n};","/** @jsx jsx */\n/* 3rd party imports */\nimport { FunctionComponent } from 'react';\nimport { jsx } from 'theme-ui';\nimport { graphql, PageProps, Link } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\n\n/* 1st party imports */\nimport Layout from '@/components/Layout';\nimport SEO from '@/components/SEO';\nimport Styles from '@/templates/PostsPage/styles';\nimport PostCard from '@/components/PostCard';\n\ninterface Query {\n\tposts: {\n\t\tedges: {\n\t\t\tnode: {\n\t\t\t\tfrontmatter: {\n\t\t\t\t\tslug: string;\n\t\t\t\t\tfeatured: boolean;\n\t\t\t\t\tdate: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t\tfeaturedImage: string;\n\t\t\t\t}\n\t\t\t\texcerpt: string;\n\t\t\t}\n\t\t}[]\n\t}\n\tfeaturedImages: {\n\t\tedges: {\n\t\t\tnode: {\n\t\t\t\trelativePath: string;\n\t\t\t\tchildImageSharp: {\n\t\t\t\t\tfluid: FluidObject;\n\t\t\t\t}\n\t\t\t}\n\t\t}[]\n\t}\n\tgenericImage: {\n\t\tchildImageSharp: {\n\t\t\tfluid: FluidObject;\n\t\t}\n\t}\n}\n\ninterface Context {\n\tlimit: number;\n\tskip: number;\n\tnumPages: number;\n\tcurrentPage: number;\n}\n\ninterface Post {\n\tslug: string;\n\ttitle: string;\n\tdate: string;\n\texcerpt: string;\n\tchildImageSharp: {\n\t\tfluid: FluidObject;\n\t} | undefined;\n}\n\nconst transformPosts = (\n\trecentPosts: Query['posts'],\n\trecentPostsImages: Query['featuredImages'],\n): Post[] => {\n\treturn recentPosts.edges.reduce<Post[]>((acc, postEdge) => {\n\t\tconst { slug, title, date, featuredImage = undefined } = postEdge.node.frontmatter;\n\t\tconst postImage = recentPostsImages.edges.find(imageEdge => {\n\t\t\treturn imageEdge.node.relativePath === featuredImage;\n\t\t});\n\t\tconst recentPost: Post = {\n\t\t\tslug,\n\t\t\ttitle,\n\t\t\tdate,\n\t\t\texcerpt: postEdge.node.excerpt,\n\t\t\tchildImageSharp: postImage?.node?.childImageSharp,\n\t\t};\n\t\tacc.push(recentPost);\n\t\treturn acc;\n\t}, []);\n};\n\nconst Template: FunctionComponent<PageProps<Query, Context>> = ({ data, pageContext }) => {\n\tconst posts = transformPosts(\n\t\tdata.posts,\n\t\tdata.featuredImages,\n\t);\n\tconst { currentPage, numPages } = pageContext;\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === numPages;\n    const prevPage = currentPage - 1 === 1 ? '/posts' : `/posts/${currentPage - 1}`;\n    const nextPage = `/posts/${currentPage + 1}`;\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title=\"Home\"/>\n\t\t\t<h1 sx={Styles.title}>Posts</h1>\n\t\t\t<nav>\n\t\t\t\t{posts.map(post => {\n\t\t\t\t\tconst { slug, title, excerpt, date: dateString } = post;\n\t\t\t\t\tconst date = new Date(dateString);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<PostCard\n\t\t\t\t\t\t\tkey={post.slug}\n\t\t\t\t\t\t\tfluid={post.childImageSharp?.fluid ?? data.genericImage.childImageSharp.fluid}\n\t\t\t\t\t\t\tpathPrefix=\"/posts/\"\n\t\t\t\t\t\t\tinfo={{slug, title, date, excerpt}}\n\t\t\t\t\t\t\tsx={Styles.post}\n\t\t\t\t\t\t\timageSx={Styles.postImage}\n\t\t\t\t\t\t\tinfoSx={Styles.postInfo}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</nav>\n\t\t\t<ul\n\t\t\t\tsx={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tlistStyle: 'none',\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tmarginTop: '6em',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{!isFirst && (\n\t\t\t\t\t<Link to={prevPage} sx={{color: 'layoutLink'}} rel=\"prev\">\n\t\t\t\t\t\t‚Üê Previous Page\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t\t{Array.from({ length: numPages }, (_, index) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={`pagination-number${index + 1}`}\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={`/posts${index === 0 ? '' : '/' + (index + 1)}`}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tpadding: '0.3em',\n\t\t\t\t\t\t\t\ttextDecoration: 'none',\n\t\t\t\t\t\t\t\tcolor: index + 1 === currentPage ? 'background' : 'layoutLink',\n\t\t\t\t\t\t\t\tbackgroundColor: index + 1 === currentPage ? 'primary' : '',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{index + 1}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t\t{!isLast && (\n\t\t\t\t\t<Link to={nextPage} sx={{color: 'layoutLink'}} rel=\"next\">\n\t\t\t\t\t\tNext Page ‚Üí\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</Layout>\n\t);\n};\n\nexport default Template;\n\nexport const postListQuery = graphql`\n\tquery ($skip: Int!, $limit: Int!, $featuredImages: [String]!) {\n\t\tposts: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t\tlimit: $limit\n\t\t\tskip: $skip\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tslug\n\t\t\t\t\t\tfeatured\n\t\t\t\t\t\tdate\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tfeaturedImage\n\t\t\t\t\t}\n\t\t\t\t\texcerpt(format: PLAIN, pruneLength: 160)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfeaturedImages: allFile(filter: { relativePath: { in: $featuredImages } } ) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\trelativePath\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfluid {\n\t\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tgenericImage: file(relativePath: { eq: \"generic-coding.jpg\" } ) {\n\t\t\tchildImageSharp {\n\t\t\t\tfluid {\n\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}