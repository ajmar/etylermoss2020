{"version":3,"sources":["webpack:///./src/components/Portrait/index.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/FeaturedCard/styles.ts","webpack:///./src/components/FeaturedCard/index.tsx","webpack:///./src/components/PostCard/styles.ts","webpack:///./src/components/PostCard/index.tsx","webpack:///./src/templates/IndexPage/styles.ts","webpack:///./src/templates/IndexPage/index.tsx"],"names":["Component","props","file","useStaticQuery","fluid","childImageSharp","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","boxShadow","theme","colors","shadow","container","position","flexDirection","image","overflow","infoContainer","forceDarkColorMode","display","width","bottom","left","textDecoration","padding","backgroundColor","color","modes","dark","bold","headerContainer","margin","title","date","excerpt","fontSize","info","pathPrefix","imageSx","intrinsic","path","slug","sx","Styles","to","dateTime","toISOString","toLocaleDateString","infoSx","portrait","float","borderRadius","portraitDark","greetings","wordSpacing","clearFloat","clear","featuredPostHeader","featuredPost","featuredPostImage","height","recentPostsHeader","textAlign","recentPostsContainer","flexFlow","justifyContent","alignItems","alignContent","flex","recentPost","flexBasis","maxWidth","marginBottom","recentPostImage","recentPostInfo","pageQuery","Template","data","pageContext","useSiteMetadata","colorMode","useColorMode","recentPosts","recentPostsImages","edges","reduce","acc","postEdge","node","frontmatter","featuredImage","undefined","postImage","find","imageEdge","relativePath","push","transformRecentPosts","Layout","SEO","Portrait","FeaturedCard","genericImage","Date","map","post","PostCard"],"mappings":"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","file":"component---src-templates-index-page-index-tsx-5922a65b58433a1a591e.js","sourcesContent":["/* 3rd party imports */\nimport React, { FunctionComponent, ComponentPropsWithoutRef } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image, { FluidObject } from 'gatsby-image';\n\ninterface Query {\n\tfile: {\n\t\tchildImageSharp: {\n\t\t\tfluid: FluidObject;\n\t\t}\n\t}\n}\n\nconst Component: FunctionComponent<ComponentPropsWithoutRef<'div'>> = (props) => {\n\tconst { file } = useStaticQuery<Query>(graphql`\n\t\tquery PortraitPhoto {\n\t\t\tfile(relativePath: { eq: \"portrait.png\" }) {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tfluid(maxWidth: 512) {\n\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`)\n\n\treturn (\n\t\t<div {...props}>\n\t\t\t<Image fluid={file.childImageSharp.fluid}/>\n\t\t</div>\n\t);\n}\n\nexport default Component;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/* 3rd party imports */\nimport { SxStyleProp } from 'theme-ui';\n\nconst boxShadow = (theme: any) => `0 0 5px 0px ${theme.colors.shadow}`;\n\nconst container: SxStyleProp = {\n\tposition: 'relative',\n\tflexDirection: ['column', 'row'],\n\tboxShadow: [boxShadow, 'none'],\n};\n\nconst image: SxStyleProp = {\n\toverflow: 'hidden',\n\tboxShadow: ['none', boxShadow],\n};\n\nconst infoContainer = (forceDarkColorMode: boolean): SxStyleProp => ({\n\tdisplay: 'inline-block',\n\tposition: [null, 'absolute'],\n\twidth: [null, '30em', '40em'],\n\tbottom: [null, '8%', '7%'],\n\tleft: [null, '11%', '8%'],\n\ttextDecoration: 'none',\n\tpadding: ['0.3em', '0.45em'],\n\tbackgroundColor: 'primary',\n\tcolor: theme => forceDarkColorMode ? theme.colors.modes.dark.bold : 'bold',\n});\n\nconst headerContainer: SxStyleProp = {\n\tmargin: ['0em 0 0.65em 0', '0em 0 0.75em 0'],\n};\n\nconst title: SxStyleProp = {\n\tmargin: 0,\n};\n\nconst date: SxStyleProp = {\n\tmargin: '0 0 0 auto',\n};\n\nconst excerpt: SxStyleProp = {\n\tmargin: 0,\n\tfontSize: '0.8em',\n};\n\nexport default { container, image, infoContainer, headerContainer, title, date, excerpt };","/** @jsx jsx */\n/* 3rd party imports */\nimport { FunctionComponent } from 'react';\nimport { jsx, Flex, SxStyleProp } from 'theme-ui';\nimport { Link } from 'gatsby';\nimport Image, { FluidObject } from 'gatsby-image';\n\n/* 1st party imports */\nimport Styles from '@/components/FeaturedCard/styles';\n\ninterface Props {\n\tinfo: {\n\t\tslug: string;\n\t\ttitle: string;\n\t\texcerpt?: string;\n\t\tdate: Date;\n\t}\n\tpathPrefix: string;\n\tfluid: FluidObject;\n\tforceDarkColorMode?: boolean;\n\timageSx?:  SxStyleProp;\n}\n\nconst Component: FunctionComponent<Props> = ({ info, pathPrefix, fluid, forceDarkColorMode = false, imageSx, ...intrinsic }) => {\n\tconst path = `${pathPrefix}${info.slug}`;\n\n\treturn (\n\t\t<Flex sx={{...Styles.container}} {...intrinsic}>\n\t\t\t<Link to={path}>\n\t\t\t\t<Image fluid={fluid} sx={{...Styles.image, ...imageSx}}/>\n\t\t\t</Link>\n\t\t\t<Link to={path} sx={Styles.infoContainer(forceDarkColorMode)}>\n\t\t\t\t<Flex sx={Styles.headerContainer}>\n\t\t\t\t\t<h3 sx={Styles.title}>{info.title}</h3>\n\t\t\t\t\t<time sx={Styles.date} dateTime={info.date.toISOString()}>{info.date.toLocaleDateString()}</time>\n\t\t\t\t</Flex>\n\t\t\t\t{info.excerpt ? <p sx={Styles.excerpt}>{info.excerpt}</p> : null}\n\t\t\t</Link>\n\t\t</Flex>\n\t);\n};\n\nexport default Component;","/* 3rd party imports */\nimport { SxStyleProp } from 'theme-ui';\n\nconst container: SxStyleProp = {\n\tboxShadow: theme => `0 0 3px 0px ${theme.colors.shadow}`,\n\tbackgroundColor: 'background',\n};\n\nconst image: SxStyleProp = {\n\toverflow: 'hidden',\n};\n\nconst infoContainer: SxStyleProp = {\n\tdisplay: 'inline-block',\n\ttextDecoration: 'none',\n\tpadding: ['0.3em', '0.45em'],\n\tcolor: 'cardText',\n\tbackgroundColor: 'card',\n\twidth: '100%',\n};\n\nconst title: SxStyleProp = {\n\tmargin: 0,\n};\n\nconst date: SxStyleProp = {\n\tmargin: '0 0 0 auto',\n};\n\nexport default { container, image, infoContainer, title, date };","/** @jsx jsx */\n/* 3rd party imports */\nimport { FunctionComponent } from 'react';\nimport { jsx, SxStyleProp } from 'theme-ui';\nimport { Link } from 'gatsby';\nimport Image, { FluidObject } from 'gatsby-image';\n\n/* 1st party imports */\nimport Styles from '@/components/PostCard/styles';\n\ninterface Props {\n\tinfo: {\n\t\tslug: string;\n\t\ttitle: string;\n\t\tdate: Date;\n\t}\n\tpathPrefix: string;\n\tfluid: FluidObject;\n\tforceDarkColorMode?: boolean;\n\timageSx?: SxStyleProp;\n\tinfoSx?: SxStyleProp;\n}\n\nconst Component: FunctionComponent<Props> = ({ info, pathPrefix, fluid, forceDarkColorMode = false, imageSx, infoSx, ...intrinsic }) => (\n\t<div sx={{...Styles.container}} {...intrinsic}>\n\t\t<Link to={`${pathPrefix}${info.slug}`}>\n\t\t\t<Image fluid={fluid} sx={{...Styles.image, ...imageSx}}/>\n\t\t\t<div sx={{...Styles.infoContainer, ...infoSx}}>\n\t\t\t\t<h3 sx={Styles.title}>{info.title}</h3>\n\t\t\t\t<time sx={Styles.date} dateTime={info.date.toISOString()}>{info.date.toLocaleDateString()}</time>\n\t\t\t</div>\n\t\t</Link>\n\t</div>\n);\n\nexport default Component;","/* 3rd party imports */\nimport { SxStyleProp } from 'theme-ui';\n\nconst portrait: SxStyleProp = {\n\twidth: ['14em', '17em', '20em'],\n\tfloat: ['none', 'right', 'right'],\n\tmargin: ['0 auto 0 auto', '0 0 0 1.5em', '0 0 0 2em'],\n\tborderRadius: '50%',\n\tboxShadow: 'none',\n}\n\nconst portraitDark: SxStyleProp = {\n\t...portrait,\n\tboxShadow: '0 0 15px -5px #9696F3',\n}\n\nconst greetings: SxStyleProp = {\n\tmargin: '1em 0 0.3em 0',\n\twordSpacing: '0.3em',\n\tfontSize: 2,\n\tcolor: 'primary',\n}\n\nconst title: SxStyleProp = {\n\tmargin: 0,\n\t'a': {\n\t\tcolor: 'text',\n\t\ttextDecoration: 'none',\n\t},\n}\n\nconst clearFloat: SxStyleProp = {\n\tclear: 'both',\n}\n\nconst featuredPostHeader: SxStyleProp = {\n\tmargin: '4em 0 0.5em 0',\n}\n\nconst featuredPost: SxStyleProp = {\n\t\n}\n\nconst featuredPostImage: SxStyleProp = {\n\twidth: ['unset', '30em', '42em'],\n\theight: ['14em', '19em', '24em'],\n}\n\nconst recentPostsHeader: SxStyleProp = {\n\tmargin: '2.5em 0 0.5em 0',\n\ttextAlign: 'center',\n}\n\nconst recentPostsContainer: SxStyleProp = {\n\tflexFlow: 'row wrap',\n\tjustifyContent: 'space-evenly',\n\talignItems: 'flex-start',\n\talignContent: 'stretch',\n\tflex: '0 1 auto',\n}\n\nconst recentPost: SxStyleProp = {\n\tflexBasis: ['75%', '40%', '30%'],\n\tmaxWidth: ['75%', '40%', '30%'],\n\tfontSize: '0.8em',\n\tmarginBottom: '2em',\n}\n\nconst recentPostImage: SxStyleProp = {\n\theight: ['12em', '15em'],\n}\n\nconst recentPostInfo: SxStyleProp = {\n\theight: ['unset', '5em'],\n}\n\nexport default {\n\tportrait,\n\tportraitDark,\n\tgreetings,\n\ttitle,\n\tclearFloat,\n\tfeaturedPostHeader,\n\tfeaturedPost,\n\tfeaturedPostImage,\n\trecentPostsHeader,\n\trecentPostsContainer,\n\trecentPost,\n\trecentPostImage,\n\trecentPostInfo,\n};","/** @jsx jsx */\n/* 3rd party imports */\nimport { FunctionComponent } from 'react';\nimport { jsx, useColorMode, Flex } from 'theme-ui';\nimport { graphql, PageProps } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\n\n/* 1st party imports */\nimport useSiteMetadata from '@/hooks/useSiteMetadata';\nimport Layout from '@/components/Layout';\nimport SEO from '@/components/SEO';\nimport Portrait from '@/components/Portrait';\nimport FeaturedCard from '@/components/FeaturedCard';\nimport PostCard from '@/components/PostCard';\nimport Styles from '@/templates/IndexPage/styles';\n\n// TODO: turn main content into a component, make Portrait like FeaturedImage\n\ninterface Query {\n\tfeaturedImage: {\n\t\tchildImageSharp: {\n\t\t\tfluid: FluidObject;\n\t\t}\n\t}\n\tgenericImage: {\n\t\tchildImageSharp: {\n\t\t\tfluid: FluidObject;\n\t\t}\n\t}\n\trecentPosts: {\n\t\tedges: {\n\t\t\tnode: {\n\t\t\t\tfrontmatter: {\n\t\t\t\t\tslug: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t\tdate: string;\n\t\t\t\t\tfeaturedImage: string | undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}[]\n\t}\n\trecentPostsImages: {\n\t\tedges: {\n\t\t\tnode: {\n\t\t\t\trelativePath: string;\n\t\t\t\tchildImageSharp: {\n\t\t\t\t\tfluid: FluidObject;\n\t\t\t\t}\n\t\t\t}\n\t\t}[]\n\t}\n}\n\ninterface Context {\n\ttitle: string;\n\tslug: string;\n\tdate: string;\n\tfeaturedImage: string;\n\texcerpt: string;\n}\n\ninterface RecentPost {\n\tslug: string;\n\ttitle: string;\n\tdate: string;\n\tchildImageSharp: {\n\t\tfluid: FluidObject;\n\t} | undefined;\n}\n\n// TODO: Check below works when posts don't define featuredImage\n\nconst transformRecentPosts = (\n\trecentPosts: Query['recentPosts'],\n\trecentPostsImages: Query['recentPostsImages'],\n): RecentPost[] => {\n\treturn recentPosts.edges.reduce<RecentPost[]>((acc, postEdge) => {\n\t\tconst { slug, title, date, featuredImage = undefined } = postEdge.node.frontmatter;\n\t\tconst postImage = recentPostsImages.edges.find(imageEdge => {\n\t\t\treturn imageEdge.node.relativePath === featuredImage;\n\t\t});\n\t\tconst recentPost: RecentPost = {\n\t\t\tslug,\n\t\t\ttitle,\n\t\t\tdate,\n\t\t\tchildImageSharp: postImage?.node?.childImageSharp,\n\t\t};\n\t\tacc.push(recentPost);\n\t\treturn acc;\n\t}, []);\n};\n\nconst Template: FunctionComponent<PageProps<Query, Context>> = ({ data, pageContext }) => {\n\tconst { title } = useSiteMetadata();\n\tconst [colorMode] = useColorMode<'default' | 'dark'>();\n\tconst recentPosts = transformRecentPosts(\n\t\tdata.recentPosts,\n\t\tdata.recentPostsImages,\n\t);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title=\"Home\"/>\n\t\t\t<main>\n\t\t\t\t<Portrait sx={colorMode === 'dark' ? Styles.portraitDark : Styles.portrait}/>\n\t\t\t\t<p sx={Styles.greetings}>Hello, Hallo, Hola</p>\n\t\t\t\t<h1 sx={Styles.title}>{title}.</h1>\n\t\t\t\t<p>\n\t\t\t\t\tI&apos;m a 19 year old student and programmer. I study Computer Science at the University\n\t\t\t\t\tof Nottingham (2020 - 2024). Outside of education I tinker with electronics, programming,\n\t\t\t\t\tgraphic design, and photography.\n\t\t\t\t</p>\n\t\t\t\t<div sx={Styles.clearFloat}/>\n\t\t\t\t<h2 sx={Styles.featuredPostHeader}>Featured Post</h2>\n\t\t\t\t<FeaturedCard\n\t\t\t\t\tfluid={data.featuredImage\n\t\t\t\t\t\t? data.featuredImage.childImageSharp.fluid\n\t\t\t\t\t\t: data.genericImage.childImageSharp.fluid\n\t\t\t\t\t}\n\t\t\t\t\tpathPrefix=\"/posts/\"\n\t\t\t\t\tinfo={{...pageContext, date: new Date(pageContext.date)}}\n\t\t\t\t\tsx={Styles.featuredPost}\n\t\t\t\t\tforceDarkColorMode={true}\n\t\t\t\t\timageSx={Styles.featuredPostImage}\n\t\t\t\t/>\n\t\t\t\t<h2 sx={Styles.recentPostsHeader}>Recent Posts</h2>\n\t\t\t\t<Flex sx={Styles.recentPostsContainer}>\n\t\t\t\t\t{recentPosts.map(post => (\n\t\t\t\t\t\t<PostCard\n\t\t\t\t\t\t\tfluid={post.childImageSharp?.fluid ?? data.genericImage.childImageSharp.fluid}\n\t\t\t\t\t\t\tpathPrefix=\"/posts/\"\n\t\t\t\t\t\t\tinfo={{title: post.title, slug: post.slug, date: new Date(post.date)}}\n\t\t\t\t\t\t\tsx={Styles.recentPost}\n\t\t\t\t\t\t\timageSx={Styles.recentPostImage}\n\t\t\t\t\t\t\tinfoSx={Styles.recentPostInfo}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Flex>\n\t\t\t</main>\n\t\t</Layout>\n\t);\n};\n\nexport default Template;\n\nexport const pageQuery = graphql`\n\tquery($featuredImage: String, $recentPostsFeaturedImages: [String!]!) {\n\t\tfeaturedImage: file(relativePath: { eq: $featuredImage } ) {\n\t\t\tchildImageSharp {\n\t\t\t\tfluid {\n\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tgenericImage: file(relativePath: { eq: \"generic-coding.jpg\" } ) {\n\t\t\tchildImageSharp {\n\t\t\t\tfluid {\n\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trecentPosts: allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] } limit: 6 ) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tslug\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate\n\t\t\t\t\t\tfeaturedImage\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trecentPostsImages: allFile(filter: { relativePath: { in: $recentPostsFeaturedImages } } ) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\trelativePath\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfluid {\n\t\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;"],"sourceRoot":""}