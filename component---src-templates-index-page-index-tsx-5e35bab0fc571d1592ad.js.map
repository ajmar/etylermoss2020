{"version":3,"sources":["webpack:///./src/components/PostCard/styles.ts","webpack:///./src/components/PostCard/index.tsx","webpack:///./src/components/Portrait/index.tsx","webpack:///./src/components/FeaturedCard/styles.ts","webpack:///./src/components/FeaturedCard/index.tsx","webpack:///./src/templates/IndexPage/styles.ts","webpack:///./src/templates/IndexPage/index.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["container","boxShadow","theme","colors","shadow","backgroundColor","image","overflow","infoContainer","display","textDecoration","padding","color","width","title","margin","date","Component","info","pathPrefix","fluid","imageSx","forceDarkColorMode","infoSx","intrinsic","sx","Styles","to","slug","dateTime","toISOString","toLocaleDateString","props","file","useStaticQuery","childImageSharp","position","flexDirection","bottom","left","modes","dark","bold","headerContainer","excerpt","fontSize","path","portrait","float","borderRadius","portraitDark","greetings","wordSpacing","githubLink","clearFloat","clear","featuredPostHeader","featuredPost","featuredPostImage","height","recentPostsHeader","textAlign","recentPostsContainer","flexFlow","justifyContent","alignItems","alignContent","flex","recentPost","flexBasis","maxWidth","marginBottom","recentPostImage","recentPostInfo","pageQuery","Template","data","pageContext","useSiteMetadata","colorMode","useColorMode","recentPosts","recentPostsImages","edges","reduce","acc","postEdge","node","frontmatter","featuredImage","undefined","postImage","find","imageEdge","relativePath","push","transformRecentPosts","Layout","SEO","Portrait","variant","href","FeaturedCard","genericImage","Date","map","post","PostCard","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"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","file":"component---src-templates-index-page-index-tsx-5e35bab0fc571d1592ad.js","sourcesContent":["/* 3rd party imports */\nimport { SxStyleProp } from 'theme-ui';\n\nconst container: SxStyleProp = {\n\tboxShadow: theme => `0 0 3px 0px ${theme.colors.shadow}`,\n\tbackgroundColor: 'background',\n};\n\nconst image: SxStyleProp = {\n\toverflow: 'hidden',\n};\n\nconst infoContainer: SxStyleProp = {\n\tdisplay: 'inline-block',\n\ttextDecoration: 'none',\n\tpadding: ['0.3em', '0.45em'],\n\tcolor: 'cardText',\n\tbackgroundColor: 'card',\n\twidth: '100%',\n};\n\nconst title: SxStyleProp = {\n\tmargin: 0,\n};\n\nconst date: SxStyleProp = {\n\tmargin: '0 0 0 auto',\n};\n\nexport default { container, image, infoContainer, title, date };","/** @jsx jsx */\n/* 3rd party imports */\nimport { FunctionComponent } from 'react';\nimport { jsx, SxStyleProp } from 'theme-ui';\nimport { Link } from 'gatsby';\nimport Image, { FluidObject } from 'gatsby-image';\n\n/* 1st party imports */\nimport Styles from '@/components/PostCard/styles';\n\ninterface Props {\n\tinfo: {\n\t\tslug: string;\n\t\ttitle: string;\n\t\tdate: Date;\n\t\texcerpt?: string;\n\t}\n\tpathPrefix: string;\n\tfluid: FluidObject;\n\tforceDarkColorMode?: boolean;\n\timageSx?: SxStyleProp;\n\tinfoSx?: SxStyleProp;\n}\n\nconst Component: FunctionComponent<Props> = ({ info, pathPrefix, fluid, forceDarkColorMode = false, imageSx, infoSx, ...intrinsic }) => (\n\t<div sx={{...Styles.container}} {...intrinsic}>\n\t\t<Link to={`${pathPrefix}${info.slug}`}>\n\t\t\t<Image fluid={fluid} sx={{...Styles.image, ...imageSx}}/>\n\t\t\t<div sx={{...Styles.infoContainer, ...infoSx}}>\n\t\t\t\t<h3 sx={Styles.title}>{info.title}</h3>\n\t\t\t\t<time sx={Styles.date} dateTime={info.date.toISOString()}>{info.date.toLocaleDateString()}</time>\n\t\t\t</div>\n\t\t\t{/* {info?.excerpt && (\n\t\t\t\t<p>{info.excerpt}</p>\n\t\t\t)} */}\n\t\t</Link>\n\t</div>\n);\n\nexport default Component;","/* 3rd party imports */\nimport React, { FunctionComponent, ComponentPropsWithoutRef } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image, { FluidObject } from 'gatsby-image';\n\ninterface Query {\n\tfile: {\n\t\tchildImageSharp: {\n\t\t\tfluid: FluidObject;\n\t\t}\n\t}\n}\n\nconst Component: FunctionComponent<ComponentPropsWithoutRef<'div'>> = (props) => {\n\tconst { file } = useStaticQuery<Query>(graphql`\n\t\tquery PortraitPhoto {\n\t\t\tfile(relativePath: { eq: \"portrait.png\" }) {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tfluid(maxWidth: 512) {\n\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`)\n\n\treturn (\n\t\t<div {...props}>\n\t\t\t<Image fluid={file.childImageSharp.fluid}/>\n\t\t</div>\n\t);\n}\n\nexport default Component;\n","/* 3rd party imports */\nimport { SxStyleProp } from 'theme-ui';\n\nconst boxShadow = (theme: any) => `0 0 5px 0px ${theme.colors.shadow}`;\n\nconst container: SxStyleProp = {\n\tposition: 'relative',\n\tflexDirection: ['column', 'row'],\n\tboxShadow: [boxShadow, 'none'],\n};\n\nconst image: SxStyleProp = {\n\toverflow: 'hidden',\n\tboxShadow: ['none', boxShadow],\n};\n\nconst infoContainer = (forceDarkColorMode: boolean): SxStyleProp => ({\n\tdisplay: 'inline-block',\n\tposition: [null, 'absolute'],\n\twidth: [null, '30em', '40em'],\n\tbottom: [null, '8%', '7%'],\n\tleft: [null, '11%', '8%'],\n\ttextDecoration: 'none',\n\tpadding: ['0.3em', '0.45em'],\n\tbackgroundColor: 'primary',\n\tcolor: theme => forceDarkColorMode ? theme.colors.modes.dark.bold : 'bold',\n});\n\nconst headerContainer: SxStyleProp = {\n\tmargin: ['0em 0 0.65em 0', '0em 0 0.75em 0'],\n};\n\nconst title: SxStyleProp = {\n\tmargin: 0,\n};\n\nconst date: SxStyleProp = {\n\tmargin: '0 0 0 auto',\n};\n\nconst excerpt: SxStyleProp = {\n\tmargin: 0,\n\tfontSize: '0.8em',\n};\n\nexport default { container, image, infoContainer, headerContainer, title, date, excerpt };","/** @jsx jsx */\n/* 3rd party imports */\nimport { FunctionComponent } from 'react';\nimport { jsx, Flex, SxStyleProp } from 'theme-ui';\nimport { Link } from 'gatsby';\nimport Image, { FluidObject } from 'gatsby-image';\n\n/* 1st party imports */\nimport Styles from '@/components/FeaturedCard/styles';\n\ninterface Props {\n\tinfo: {\n\t\tslug: string;\n\t\ttitle: string;\n\t\texcerpt?: string;\n\t\tdate: Date;\n\t}\n\tpathPrefix: string;\n\tfluid: FluidObject;\n\tforceDarkColorMode?: boolean;\n\timageSx?:  SxStyleProp;\n}\n\nconst Component: FunctionComponent<Props> = ({ info, pathPrefix, fluid, forceDarkColorMode = false, imageSx, ...intrinsic }) => {\n\tconst path = `${pathPrefix}${info.slug}`;\n\n\treturn (\n\t\t<Flex sx={{...Styles.container}} {...intrinsic}>\n\t\t\t<Link to={path}>\n\t\t\t\t<Image fluid={fluid} sx={{...Styles.image, ...imageSx}}/>\n\t\t\t</Link>\n\t\t\t<Link to={path} sx={Styles.infoContainer(forceDarkColorMode)}>\n\t\t\t\t<Flex sx={Styles.headerContainer}>\n\t\t\t\t\t<h3 sx={Styles.title}>{info.title}</h3>\n\t\t\t\t\t<time sx={Styles.date} dateTime={info.date.toISOString()}>{info.date.toLocaleDateString()}</time>\n\t\t\t\t</Flex>\n\t\t\t\t{info.excerpt ? <p sx={Styles.excerpt}>{info.excerpt}</p> : null}\n\t\t\t</Link>\n\t\t</Flex>\n\t);\n};\n\nexport default Component;","/* 3rd party imports */\nimport { SxStyleProp } from 'theme-ui';\n\nconst portrait: SxStyleProp = {\n\twidth: ['14em', '17em', '20em'],\n\tfloat: ['none', 'right', 'right'],\n\tmargin: ['0 auto 0 auto', '0 0 0 1.5em', '0 0 0 2em'],\n\tborderRadius: '50%',\n\tboxShadow: 'none',\n}\n\nconst portraitDark: SxStyleProp = {\n\t...portrait,\n\tboxShadow: '0 0 15px -5px #9696F3',\n}\n\nconst greetings: SxStyleProp = {\n\tmargin: '1em 0 0.3em 0',\n\twordSpacing: '0.3em',\n\tfontSize: 2,\n\tcolor: 'primary',\n}\n\nconst title: SxStyleProp = {\n\tmargin: 0,\n}\n\nconst githubLink: SxStyleProp = {\n\tcolor: 'link',\n\ttextDecoration: 'none',\n}\n\nconst clearFloat: SxStyleProp = {\n\tclear: 'both',\n}\n\nconst featuredPostHeader: SxStyleProp = {\n\tmargin: '4em 0 0.5em 0',\n}\n\nconst featuredPost: SxStyleProp = {\n\t\n}\n\nconst featuredPostImage: SxStyleProp = {\n\twidth: ['unset', '30em', '42em'],\n\theight: ['14em', '19em', '24em'],\n}\n\nconst recentPostsHeader: SxStyleProp = {\n\tmargin: '2.5em 0 0.5em 0',\n\ttextAlign: 'center',\n}\n\nconst recentPostsContainer: SxStyleProp = {\n\tflexFlow: 'row wrap',\n\tjustifyContent: 'space-evenly',\n\talignItems: 'flex-start',\n\talignContent: 'stretch',\n\tflex: '0 1 auto',\n}\n\nconst recentPost: SxStyleProp = {\n\tflexBasis: ['75%', '40%', '30%'],\n\tmaxWidth: ['75%', '40%', '30%'],\n\tfontSize: '0.8em',\n\tmarginBottom: '2em',\n}\n\nconst recentPostImage: SxStyleProp = {\n\theight: ['12em', '15em'],\n}\n\nconst recentPostInfo: SxStyleProp = {\n\theight: ['unset', '5em'],\n}\n\nexport default {\n\tportrait,\n\tportraitDark,\n\tgreetings,\n\ttitle,\n\tgithubLink,\n\tclearFloat,\n\tfeaturedPostHeader,\n\tfeaturedPost,\n\tfeaturedPostImage,\n\trecentPostsHeader,\n\trecentPostsContainer,\n\trecentPost,\n\trecentPostImage,\n\trecentPostInfo,\n};","/** @jsx jsx */\n/* 3rd party imports */\nimport { FunctionComponent } from 'react';\nimport { jsx, useColorMode, Flex, Link } from 'theme-ui';\nimport { graphql, PageProps } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\n\n/* 1st party imports */\nimport useSiteMetadata from '@/hooks/useSiteMetadata';\nimport Layout from '@/components/Layout';\nimport SEO from '@/components/SEO';\nimport Portrait from '@/components/Portrait';\nimport FeaturedCard from '@/components/FeaturedCard';\nimport PostCard from '@/components/PostCard';\nimport Styles from '@/templates/IndexPage/styles';\n\n// TODO: turn main content into a component, make Portrait like FeaturedImage\n\ninterface Query {\n\tfeaturedImage: {\n\t\tchildImageSharp: {\n\t\t\tfluid: FluidObject;\n\t\t}\n\t}\n\tgenericImage: {\n\t\tchildImageSharp: {\n\t\t\tfluid: FluidObject;\n\t\t}\n\t}\n\trecentPosts: {\n\t\tedges: {\n\t\t\tnode: {\n\t\t\t\tfrontmatter: {\n\t\t\t\t\tslug: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t\tdate: string;\n\t\t\t\t\tfeaturedImage: string | undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}[]\n\t}\n\trecentPostsImages: {\n\t\tedges: {\n\t\t\tnode: {\n\t\t\t\trelativePath: string;\n\t\t\t\tchildImageSharp: {\n\t\t\t\t\tfluid: FluidObject;\n\t\t\t\t}\n\t\t\t}\n\t\t}[]\n\t}\n}\n\ninterface Context {\n\ttitle: string;\n\tslug: string;\n\tdate: string;\n\tfeaturedImage: string;\n\texcerpt: string;\n}\n\ninterface RecentPost {\n\tslug: string;\n\ttitle: string;\n\tdate: string;\n\tchildImageSharp: {\n\t\tfluid: FluidObject;\n\t} | undefined;\n}\n\n// TODO: Check below works when posts don't define featuredImage\n\nconst transformRecentPosts = (\n\trecentPosts: Query['recentPosts'],\n\trecentPostsImages: Query['recentPostsImages'],\n): RecentPost[] => {\n\treturn recentPosts.edges.reduce<RecentPost[]>((acc, postEdge) => {\n\t\tconst { slug, title, date, featuredImage = undefined } = postEdge.node.frontmatter;\n\t\tconst postImage = recentPostsImages.edges.find(imageEdge => {\n\t\t\treturn imageEdge.node.relativePath === featuredImage;\n\t\t});\n\t\tconst recentPost: RecentPost = {\n\t\t\tslug,\n\t\t\ttitle,\n\t\t\tdate,\n\t\t\tchildImageSharp: postImage?.node?.childImageSharp,\n\t\t};\n\t\tacc.push(recentPost);\n\t\treturn acc;\n\t}, []);\n};\n\nconst Template: FunctionComponent<PageProps<Query, Context>> = ({ data, pageContext }) => {\n\tconst { title } = useSiteMetadata();\n\tconst [colorMode] = useColorMode<'default' | 'dark'>();\n\tconst recentPosts = transformRecentPosts(\n\t\tdata.recentPosts,\n\t\tdata.recentPostsImages,\n\t);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title=\"Home\"/>\n\t\t\t<main>\n\t\t\t\t<Portrait sx={colorMode === 'dark' ? Styles.portraitDark : Styles.portrait}/>\n\t\t\t\t<p sx={Styles.greetings}>Hello, Hallo, Hola</p>\n\t\t\t\t<h1 sx={Styles.title}>{title}.</h1>\n\t\t\t\t<p>\n\t\t\t\t\tI&apos;m a 19 year old student and programmer. I study Computer Science at the University\n\t\t\t\t\tof Nottingham (2020 - 2024). Outside of education I tinker with electronics, programming,\n\t\t\t\t\tgraphic design, and photography.\n\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tI do fullstack web development with TypeScript, GraphQL, SQL, and React.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tSee my <Link variant=\"regular\" href=\"https://github.com/etylermoss/\"> Github</Link> for a look at what I've made\n\t\t\t\t\tand contributed to.\n\t\t\t\t</p>\n\t\t\t\t<div sx={Styles.clearFloat}/>\n\t\t\t\t<h2 sx={Styles.featuredPostHeader}>Featured Post</h2>\n\t\t\t\t<FeaturedCard\n\t\t\t\t\tfluid={data.featuredImage\n\t\t\t\t\t\t? data.featuredImage.childImageSharp.fluid\n\t\t\t\t\t\t: data.genericImage.childImageSharp.fluid\n\t\t\t\t\t}\n\t\t\t\t\tpathPrefix=\"/posts/\"\n\t\t\t\t\tinfo={{...pageContext, date: new Date(pageContext.date)}}\n\t\t\t\t\tsx={Styles.featuredPost}\n\t\t\t\t\tforceDarkColorMode={true}\n\t\t\t\t\timageSx={Styles.featuredPostImage}\n\t\t\t\t/>\n\t\t\t\t<h2 sx={Styles.recentPostsHeader}>Recent Posts</h2>\n\t\t\t\t<Flex sx={Styles.recentPostsContainer}>\n\t\t\t\t\t{recentPosts.map(post => (\n\t\t\t\t\t\t<PostCard\n\t\t\t\t\t\t\tfluid={post.childImageSharp?.fluid ?? data.genericImage.childImageSharp.fluid}\n\t\t\t\t\t\t\tpathPrefix=\"/posts/\"\n\t\t\t\t\t\t\tinfo={{title: post.title, slug: post.slug, date: new Date(post.date)}}\n\t\t\t\t\t\t\tsx={Styles.recentPost}\n\t\t\t\t\t\t\timageSx={Styles.recentPostImage}\n\t\t\t\t\t\t\tinfoSx={Styles.recentPostInfo}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Flex>\n\t\t\t</main>\n\t\t</Layout>\n\t);\n};\n\nexport default Template;\n\nexport const pageQuery = graphql`\n\tquery($featuredImage: String, $recentPostsFeaturedImages: [String]!) {\n\t\tfeaturedImage: file(relativePath: { eq: $featuredImage } ) {\n\t\t\tchildImageSharp {\n\t\t\t\tfluid {\n\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tgenericImage: file(relativePath: { eq: \"generic-coding.jpg\" } ) {\n\t\t\tchildImageSharp {\n\t\t\t\tfluid {\n\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trecentPosts: allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] } limit: 6 ) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tslug\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate\n\t\t\t\t\t\tfeaturedImage\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trecentPostsImages: allFile(filter: { relativePath: { in: $recentPostsFeaturedImages } } ) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\trelativePath\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfluid {\n\t\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}